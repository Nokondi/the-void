{"version":3,"file":"static/js/723.1fe9d336.chunk.js","mappings":"mPAmBe,SAASA,IACpB,IAAMC,GAASC,EAAAA,EAAAA,UAAS,KAClBC,GAAeC,EAAAA,EAAAA,gBAAe,KACpCC,GAAwBC,EAAAA,EAAAA,WAAjBC,EAAKF,EAALE,MAAOC,EAAMH,EAANG,OACRC,GAASC,EAAAA,EAAAA,KAAIH,EAAQ,EAAGC,EAAS,GACjCG,GAAUT,EAAAA,EAAAA,UAAS,GACnBU,GAAgBR,EAAAA,EAAAA,gBAAe,GAS/BS,GAAgBC,EAAAA,EAAAA,aAAY,WAAD,IAAAC,GAAAC,EAAAA,EAAAA,UAAC,UAAMC,GACpCC,QAAQC,IAAIF,SAING,EAAAA,EAAAA,iBAAgBH,EAC1B,IAAC,gBAAAI,GAAA,OAAAN,EAAAO,MAAA,KAAAC,UAAA,EANiC,GAM/B,IAEGC,GAAkBV,EAAAA,EAAAA,aAAY,WAAD,IAAAW,GAAAT,EAAAA,EAAAA,UAAC,UAAMU,SAChCR,QAAQC,IAAIO,EACtB,IAAC,gBAAAC,GAAA,OAAAF,EAAAH,MAAA,KAAAC,UAAA,EAFmC,GAEjC,IAYH,OAVAK,EAAAA,EAAAA,YAAU,WACNzB,EAAa0B,OAAQC,EAAAA,EAAAA,WAA0B,IAAhBC,KAAKC,UAAiBC,EAAAA,EAAAA,aAAWC,EAAAA,EAAAA,YAAW,IAAK,CAAEC,SAAU,OAAU,GAAG,IACzGvB,EAAciB,OAAQC,EAAAA,EAAAA,WAA0B,IAAhBC,KAAKC,UAAiBC,EAAAA,EAAAA,aAAWC,EAAAA,EAAAA,YAAW,EAAG,CAAEC,SAAU,OAAU,GAAG,GAC5G,GAAG,CAAChC,EAAcS,KAElBwB,EAAAA,EAAAA,uBAAqB,WACjBnC,EAAOoC,QAAUlC,EAAa0B,MAC9BlB,EAAQ0B,QAAUzB,EAAciB,KACpC,GAAG1B,EAAcS,IAGb0B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,OAAM,CAACC,MAAOC,EAAOC,OAAOL,UACzBC,EAAAA,EAAAA,KAACK,EAAAA,KAAI,CAACC,EAAG,EAAGC,EAAG,EAAGzC,MAAOA,EAAOC,OAAQA,EAAOgC,UAC3CF,EAAAA,EAAAA,MAACW,EAAAA,MAAK,CAACC,KAAK,WAAUV,SAAA,EACtBC,EAAAA,EAAAA,KAACU,EAAAA,eAAc,CACXR,MAAOC,EAAOQ,SACdC,EAAG5C,EACH6C,EAAGrD,EACHsD,OAAQ,CAAC,UAAW,cAExBd,EAAAA,EAAAA,KAACe,EAAAA,aAAY,CAACC,MAAO,IAAMC,MAAO,IAAMC,QAAS,YAIzDlB,EAAAA,EAAAA,KAACmB,EAAAA,QAAS,CAACC,QA5CH,CACZC,WAAY,CACRC,QAAS,GAEbC,OAAQ,SAwCyBC,KAAMpD,EAAeqD,OAAQ1C,MAItE,CAGA,IAAMoB,EAASuB,EAAAA,QAAAA,OAAkB,CAC7Bf,SAAU,CACN7C,MAAO,OACPC,OAAQ,QAEZqC,OAAQ,CACJuB,SAAU,WACVC,IAAK,EACLC,KAAM,EACN/D,MAAO,OACPC,OAAQ,S","sources":["components/AnimatedGradient.js"],"sourcesContent":["import React, {useEffect, useCallback } from 'react';\r\nimport { StyleSheet,  useWindowDimensions } from 'react-native';\r\nimport { Canvas,\r\n         Rect,\r\n         Blend,\r\n         FractalNoise,\r\n         RadialGradient,\r\n         useValue,\r\n         useSharedValueEffect,\r\n         vec\r\n} from '@shopify/react-native-skia';\r\nimport { useSharedValue,\r\n       withTiming,\r\n       withRepeat,\r\n       withDelay\r\n} from 'react-native-reanimated';\r\nimport Particles from 'react-particles';\r\nimport { loadStarsPreset } from 'tsparticles-preset-stars';\r\n\r\nexport default function AnimatedGradient() {\r\n    const radius = useValue(128);\r\n    const sharedRadius = useSharedValue(128);\r\n    const {width, height} = useWindowDimensions();\r\n    const center = vec(width / 2, height / 2);\r\n    const circleR = useValue(1);\r\n    const sharedCircleR = useSharedValue(0);\r\n\r\n    const options = {\r\n        background: {\r\n            opacity: 0,\r\n        },\r\n        preset: \"stars\",\r\n    };\r\n\r\n    const particlesInit = useCallback(async engine => {\r\n        console.log(engine);\r\n        // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n        // starting from v2 you can add only the features you need reducing the bundle size\r\n        await loadStarsPreset(engine);\r\n    }, []);\r\n\r\n    const particlesLoaded = useCallback(async container => {\r\n        await console.log(container);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        sharedRadius.value = withDelay(Math.random() * 1000, withRepeat(withTiming(800, { duration: 8000 }), -1, true));\r\n        sharedCircleR.value = withDelay(Math.random() * 1000, withRepeat(withTiming(1, { duration: 1000 }), -1, true));\r\n    }, [sharedRadius, sharedCircleR]);\r\n\r\n    useSharedValueEffect(() => {\r\n        radius.current = sharedRadius.value;\r\n        circleR.current = sharedCircleR.value;\r\n    }, sharedRadius, sharedCircleR);\r\n\r\n    return (\r\n        <>\r\n            <Canvas style={styles.canvas}>\r\n                <Rect x={0} y={0} width={width} height={height}>\r\n                    <Blend mode=\"multiply\">\r\n                    <RadialGradient\r\n                        style={styles.gradient}\r\n                        c={center}\r\n                        r={radius}\r\n                        colors={[\"#483475\", \"#070b34\"]}\r\n                        />\r\n                    <FractalNoise freqX={0.01} freqY={0.01} octaves={4} />\r\n                    </Blend>\r\n                </Rect>\r\n            </Canvas>\r\n            <Particles options={options} init={particlesInit} loaded={particlesLoaded} />\r\n        </>\r\n    );\r\n    \r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    gradient: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    canvas: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n    }\r\n});"],"names":["AnimatedGradient","radius","useValue","sharedRadius","useSharedValue","_useWindowDimensions","useWindowDimensions","width","height","center","vec","circleR","sharedCircleR","particlesInit","useCallback","_ref","_asyncToGenerator","engine","console","log","loadStarsPreset","_x","apply","arguments","particlesLoaded","_ref2","container","_x2","useEffect","value","withDelay","Math","random","withRepeat","withTiming","duration","useSharedValueEffect","current","_jsxs","_Fragment","children","_jsx","Canvas","style","styles","canvas","Rect","x","y","Blend","mode","RadialGradient","gradient","c","r","colors","FractalNoise","freqX","freqY","octaves","Particles","options","background","opacity","preset","init","loaded","StyleSheet","position","top","left"],"sourceRoot":""}